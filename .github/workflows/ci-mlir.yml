# This workflow will install MLIR, Python dependencies, run tests and lint with a single version of Python

name: CI - MLIR-based Testing

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']

    env:
      LLVM_SYMBOLIZER_PATH: /usr/lib/llvm-11/bin/llvm-symbolizer
      MLIR-Version: cd708029e0b2869e80abe31ddb175f7c35361f90
      COLLECT_COVERAGE: ${{ matrix.python-version == '3.10' }}
    steps:
    - uses: actions/checkout@v4
      with:
        path: xdsl
        fetch-depth: 2

    - name: Install uv
      uses: astral-sh/setup-uv@v5
      with:
        enable-cache: true
        cache-dependency-glob: "xdsl/uv.lock"

    - name: Set up Python ${{ matrix.python-version }}
      run: |
        # Change directory so that xdsl-opt can be found during installation.
        cd xdsl
        uv python install ${{ matrix.python-version }}

    - name: Cache MLIR installation
      id: cache-mlir
      uses: actions/cache@v3
      with:
        path: /usr/bin/mlir-opt-19
        key: mlir-19-tools-${{ runner.os }}

    - name: Install MLIR
      if: steps.cache-mlir.outputs.cache-hit != 'true'
      run: |
        sudo apt-get install -y mlir-19-tools

    - name: Install the package locally and nbval
      run: |
        # Change directory so that xdsl-opt can be found during installation.
        cd xdsl
        which mlir-opt-19
        which mlir-opt
        MLIR_OPT_PATH="/usr/bin/mlir-opt-19" VENV_EXTRAS="--all-extras" make venv


    - name: Test with pytest and generate code coverage
      run: |
        cd xdsl
        if [ "$COLLECT_COVERAGE" = "true" ]; then
          uv run pytest -W error --cov
        else
          uv run pytest -W error
        fi

    - name: Execute lit tests
      run: |
        cd xdsl
        # Add mlir-opt to the path
        export PATH=$PATH:${GITHUB_WORKSPACE}/llvm-project/build/bin/
        if [ "$COLLECT_COVERAGE" = "true" ]; then
          uv run lit -v tests/filecheck/ -DCOVERAGE
          uv run lit -v docs/Toy/examples/ -DCOVERAGE
        else
          uv run lit -v tests/filecheck/
          uv run lit -v docs/Toy/examples/
        fi

    - name: Test MLIR dependent examples/tutorials
      run: |
        cd xdsl
        # Add mlir-opt to the path
        export PATH=$PATH:${GITHUB_WORKSPACE}/llvm-project/build/bin/
        uv run pytest --nbval docs/mlir_interoperation.ipynb --maxfail 1 -vv

    - name: Combine coverage data
      if: matrix.python-version == '3.10'
      run: |
        cd xdsl
        uv run coverage combine --append
        uv run coverage report
        uv run coverage xml

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.10'
      uses: Wandalen/wretry.action@v3
      with:
        action: codecov/codecov-action@v4
        attempt_delay: 10000
        attempt_limit: 10
        with: |
          fail_ci_if_error: true
          verbose: true
          root_dir: xdsl
          files: coverage.xml
          codecov_yml_path: codecov.yml
          token: ${{ secrets.CODECOV_TOKEN }}
