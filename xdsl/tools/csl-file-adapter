#!/usr/bin/env python3

import sys
from xdsl.backend.csl.print_csl import CslPrintContext
import argparse
from contextlib import contextmanager


def parse_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser(
        prog="csl-file-adapter",
        description="Splits stdin from xdsl-opt into two csl files")
    parser.add_argument("-l", "--layout", default="layout.csl",
                        help="Path to the layout file")
    parser.add_argument("-p", "--program", metavar="PATH", default="pe_program.csl",
                        help="Path to the program file")
    parser.add_argument("input", nargs='?', metavar="FILE",
                        default='-', help="Read from FILE instead of stdin. Use - to explicitly request stdin.")
    return parser.parse_args()


@contextmanager
def open_input(name: str):
    if name == '-':
        yield sys.stdin
    else:
        f = open(name, "r")
        yield f
        f.close()


# TODO(dk949): this is a little hacky...
if __name__ == "__main__":
    div = f"{CslPrintContext.DIVIDER}\n"
    file = None
    try:
        args = parse_args()
        file = open(args.layout, "w")
        with open_input(args.input) as input:
            for line in input:
                if line == div:
                    file.close()
                    file = open(args.program, "w")
                else:
                    file.write(line)
    except Exception as e:
        print(f"An unexpected error occurred: {e}")
    finally:
        if file:
            file.close()
