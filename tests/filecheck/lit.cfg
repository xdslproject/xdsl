import lit.formats
import os

config.test_source_root = os.path.dirname(__file__)
xdsl_src = Path(config.test_source_root).parent.parent

config.name = "xDSL"
config.suffixes = ['.test', '.mlir', '.py']

config.substitutions.append(('XDSL_ROUNDTRIP', "xdsl-opt %s --print-op-generic --split-input-file | xdsl-opt --split-input-file | filecheck %s"))
config.substitutions.append(("XDSL_GENERIC_ROUNDTRIP", "xdsl-opt %s --print-op-generic --split-input-file | filecheck %s --check-prefix=CHECK-GENERIC"))

if "COVERAGE" in lit_config.params:
    xdsl_opt = "xdsl/tools/xdsl_opt.py"
    xdsl_run = "xdsl/tools/xdsl_run.py"
    irdl_to_pyrdl = "xdsl/tools/irdl_to_pyrdl.py"
    config.test_format = lit.formats.ShTest(preamble_commands=[f"cd {xdsl_src}"])
else:
    src_dir = Path(config.test_source_root).parent.parent
    rc_file = src_dir / "pyproject.toml"
    data_file = src_dir / ".coverage.filecheck"
    tools_dir = src_dir / "xdsl" / "tools"
    xdsl_opt = tools_dir / "xdsl_opt.py"
    xdsl_run = tools_dir / "xdsl_run.py"
    irdl_to_pyrdl = tools_dir / "irdl_to_pyrdl.py"
    config.test_format = lit.formats.ShTest()

config.substitutions.append(('xdsl-opt', f"{coverage_cmd} {xdsl_opt}"))
config.substitutions.append(('xdsl-run', f"{coverage_cmd} {xdsl_run}"))
config.substitutions.append(('irdl-to-pyrdl', f"{coverage_cmd} {irdl_to_pyrdl}"))
config.substitutions.append(('python', f"{coverage_cmd}"))

# checking if maxIndividualTestTime is available on the platform and sets
# it to 20sec if so, declares lit-max-individual-test-time feature for
# further checking by tests.
supported, errormsg = lit_config.maxIndividualTestTimeIsSupported
if supported:
    config.available_features.add("lit-max-individual-test-time")
    lit_config.maxIndividualTestTime = 20
else:
    lit_config.warning(
        "Setting a timeout per test not supported. "
        + errormsg
        + " Some tests will be skipped."
    )
