name: Deploy JupiterLyte Page

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout xDSL
        uses: actions/checkout@v3
        with:
          path: xdsl

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install jupyterlite[all] libarchive-c build pyodide-build
          
      - name: Build xDSL source distribution
        run: |
          cd xdsl
          python setup.py sdist

      - name: Restore cached Pyodide tree
        id: cache-pyodide
        uses: actions/cache@v3
        with:
          path: pyodide
          key: pyodide
          
      - name: Clone pyodide if not cached
        if: steps.cache-pyodide.outputs.cache-hit != 'true'
        run: git clone https://github.com/pyodide/pyodide.git

      - name: Build custom Pyodide distribution
        run: |
          XDSL_SOURCE_DIST=$(ls xdsl/dist)
          XDSL_SOURCE_URL=file://$(pwd)/xdsl/dist/$XDSL_SOURCE_DIST
          XDSL_SHA256=($(sha256sum xdsl/dist/$XDSL_SOURCE_DIST))
          
          cd pyodide
          git fetch --all
          git checkout 0.22.0a3
          python -m pip install -r requirements.txt
          sudo apt update && sudo apt install f2c
          
          rm packages/xdsl packages/frozenlist -rf
          pyodide skeleton pypi xdsl
          pyodide skeleton pypi frozenlist
          
          python -c 'import yaml; f = open("packages/xdsl/meta.yaml"); y = yaml.safe_load(f); f.close(); y["requirements"] = {"run" : ["frozenlist"]}; y["source"] = {"url" : "'$XDSL_SOURCE_URL'", "sha256" : "'$XDSL_SHA256'"}; f = open("packages/xdsl/meta.yaml", "w"); yaml.dump(y, f)'
          
          PYODIDE_PACKAGES="frozenlist,coverage,xdsl" make

      - name: Build the JupyterLite site
        run: |
          mkdir content
          cp xdsl/docs/* content -r
          
          rm -rf pyodide/pyodide
          mkdir pyodide/pyodide
          mv pyodide/dist pyodide/pyodide/pyodide
          
          python -m jupyter lite build --contents content --pyodide pyodide/pyodide

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./_output

  deploy:
    needs: build
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

