// RUN: xdsl-opt %s | xdsl-opt | filecheck %s

builtin.module() {

  func.func() ["sym_name" = "noarg_void", "function_type" = !fun<[], []>, "sym_visibility" = "private"] {
    func.return()
  }

  // CHECK: func.func() ["sym_name" = "noarg_void",
  // CHECK-NEXT:  func.return()
  // CHECK-NEXT:}

  func.func() ["sym_name" = "call_void", "function_type" = !fun<[], []>, "sym_visibility" = "private"] {
    func.call() ["callee" = @call_void]
    func.return()
  }

  // CHECK: func.func() ["sym_name" = "call_void",
  // CHECK-NEXT:  func.call() ["callee" = @call_void]
  // CHECK-NEXT:  func.return()
  // CHECK-NEXT:}

  func.func() ["sym_name" = "arg_rec", "function_type" = !fun<[!test.type<"int">], [!test.type<"int">]>, "sym_visibility" = "private"] {
  ^0(%0 : !test.type<"int">):
    %1 : !test.type<"int"> = func.call(%0 : !test.type<"int">) ["callee" = @arg_rec]
    func.return(%1 : !test.type<"int">)
  }

  // CHECK: func.func() ["sym_name" = "arg_rec",
  // CHECK-NEXT: ^{{.*}}(%{{.*}} : !test.type<"int">):
  // CHECK-NEXT:   %{{.*}} : !test.type<"int"> = func.call(%{{.*}} : !test.type<"int">) ["callee" = @arg_rec]
  // CHECK-NEXT:   func.return(%{{.*}} : !test.type<"int">)
  // CHECK-NEXT: }

  func.func() ["sym_name" = "external_fn", "function_type" = !fun<[!i32], [!i32]>, "sym_visibility" = "private"] { }

  // CHECK: func.func() ["sym_name" = "external_fn", "function_type" = !fun<[!i32], [!i32]>, "sym_visibility" = "private"] {
  // CHECK-NEXT: }

}
