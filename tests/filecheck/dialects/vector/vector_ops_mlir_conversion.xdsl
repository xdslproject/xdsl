// RUN: xdsl-opt -t mlir %s | filecheck %s

builtin.module() {

func.func() ["sym_name" = "vector_test_mlir_conversion", "function_type" = !fun<[!memref<[4 : !index, 4 : !index], !index>, !index], []>, "sym_visibility" = "private"] {
  ^0(%0 : !memref<[4 : !index, 4 : !index], !index>, %1 : !index):
    %2 : !vector<[2 : !index], !index> = vector.load(%0 : !memref<[4 : !index, 4 : !index], !index>, %1 : !index, %1 : !index)
    vector.store(%2 : !vector<[2 : !index], !index>, %0 : !memref<[4 : !index, 4 : !index], !index>, %1 : !index, %1 : !index)

    func.return()
  }

// CHECK: "builtin.module"() ({
// CHECK-NEXT: "func.func"() ({
// CHECK-NEXT: ^0(%0 : memref<4x4xindex>, %1 : index):
// CHECK-NEXT: %2 = "vector.load"(%0, %1, %1) : (memref<4x4xindex>, index, index) -> vector<2xindex>
// CHECK-NEXT: "vector.store"(%2, %0, %1, %1) : (vector<2xindex>, memref<4x4xindex>, index, index) -> ()
// CHECK-NEXT: "func.return"() : () -> ()
// CHECK-NEXT: }) {"sym_name" = "vector_test_mlir_conversion", "function_type" = (memref<4x4xindex>, index) -> (), "sym_visibility" = "private"} : () -> ()
// CHECK-NEXT: }) : () -> ()

}
